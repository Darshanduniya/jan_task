import subprocess

# SSH connection details
ssh_host = 'remote_server_ip'
ssh_port = 22
ssh_username = 'your_ssh_username'
ssh_password = 'your_ssh_password'

# PostgreSQL connection details on the remote server
postgres_host = 'remote_postgres_host'
postgres_port = 5432
postgres_database = 'remote_postgres_database'
postgres_user = 'remote_postgres_user'
postgres_password = 'remote_postgres_password'

# Query to be executed
postgres_query = 'SELECT package_id FROM ind;'

# Construct the SSH and PostgreSQL commands
ssh_command = f'sshpass -p {ssh_password} ssh {ssh_username}@{ssh_host} -p {ssh_port}'
psql_command = f'psql -h {postgres_host} -p {postgres_port} -d {postgres_database} -U {postgres_user} -c "{postgres_query}"'

# Combine the commands and execute the entire pipeline
try:
    full_command = f'{ssh_command} "{psql_command}"'
    process = subprocess.Popen(full_command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output, error = process.communicate()

    if process.returncode == 0:
        print("Query executed successfully.")
        print("Query result:", output.decode())
    else:
        print(f"Error executing the query: {error.decode()}")
except Exception as e:
    print(f"Error: {str(e)}")
